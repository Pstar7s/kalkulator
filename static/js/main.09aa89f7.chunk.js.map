{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","input","setInput","useState","handleButtonClick","value","handleClear","handleCalculate","eval","React","createElement","className","onClick","reportWebVitals","onPerfEntry","Function","then","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"kJAAA,4UAIA,SAASA,MACP,MAAOC,MAAOC,UAAYC,oDAAS,IAE7BC,kBAAqBC,IACzBH,SAASD,MAAQI,IAGbC,YAAcA,KAClBJ,SAAS,KAGLK,gBAAkBA,KACtB,IACEL,SAASM,KAAKP,QACd,MACAC,SAAS,WAIb,OACEO,6CAAAC,cAAA,OAAKC,UAAU,aACbF,6CAAAC,cAAA,OAAKC,UAAU,cACbF,6CAAAC,cAAA,OAAKC,UAAU,WAAWV,OAC1BQ,6CAAAC,cAAA,OAAKC,UAAU,WACbF,6CAAAC,cAAA,UAAQC,UAAU,SAASC,QAASA,IAAMR,kBAAkB,MAAM,KAClEK,6CAAAC,cAAA,UAAQC,UAAU,SAASC,QAASA,IAAMR,kBAAkB,MAAM,KAClEK,6CAAAC,cAAA,UAAQC,UAAU,SAASC,QAASA,IAAMR,kBAAkB,MAAM,KAClEK,6CAAAC,cAAA,UAAQC,UAAU,SAASC,QAASN,aAAa,KACjDG,6CAAAC,cAAA,UAAQC,UAAU,SAASC,QAASA,IAAMR,kBAAkB,MAAM,KAClEK,6CAAAC,cAAA,UAAQC,UAAU,SAASC,QAASA,IAAMR,kBAAkB,MAAM,KAClEK,6CAAAC,cAAA,UAAQC,UAAU,SAASC,QAASA,IAAMR,kBAAkB,MAAM,KAClEK,6CAAAC,cAAA,UAAQC,UAAU,SAASC,QAASA,IAAMR,kBAAkB,MAAM,KAClEK,6CAAAC,cAAA,UAAQC,UAAU,SAASC,QAASA,IAAMR,kBAAkB,MAAM,KAClEK,6CAAAC,cAAA,UAAQC,UAAU,SAASC,QAASA,IAAMR,kBAAkB,MAAM,KAClEK,6CAAAC,cAAA,UAAQC,UAAU,SAASC,QAASA,IAAMR,kBAAkB,MAAM,KAClEK,6CAAAC,cAAA,UAAQC,UAAU,SAASC,QAASA,IAAMR,kBAAkB,MAAM,KAClEK,6CAAAC,cAAA,UAAQC,UAAU,SAASC,QAASA,IAAMR,kBAAkB,MAAM,KAClEK,6CAAAC,cAAA,UAAQC,UAAU,SAASC,QAASL,iBAAiB,KACrDE,6CAAAC,cAAA,UAAQC,UAAU,SAASC,QAASA,IAAMR,kBAAkB,MAAM,KAClEK,6CAAAC,cAAA,UAAQC,UAAU,SAASC,QAASA,IAAMR,kBAAkB,MAAM,QAO7DJ,2B,oKCtCAa,MAZSC,IAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,KAAKC,IAAkD,IAAjD,OAAEC,EAAM,OAAEC,EAAM,OAAEC,EAAM,OAAEC,EAAM,QAAEC,GAASL,EACpEC,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAOP,GACPQ,EAAQR,MCDDS,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACHlB,IAAAC,cAACD,IAAMmB,WAAU,KACfnB,IAAAC,cAACV,IAAG,QAORa,M","file":"static/js/main.09aa89f7.chunk.js","sourcesContent":["// src/App.js\nimport React, { useState } from 'react';\nimport './App.css';\n\nfunction App() {\n  const [input, setInput] = useState('');\n\n  const handleButtonClick = (value) => {\n    setInput(input + value);\n  };\n\n  const handleClear = () => {\n    setInput('');\n  };\n\n  const handleCalculate = () => {\n    try {\n      setInput(eval(input)); // Pastikan untuk menggunakan eval dengan hati-hati\n    } catch {\n      setInput('Error');\n    }\n  };\n\n  return (\n    <div className=\"container\">\n      <div className=\"calculator\">\n        <div className=\"display\">{input}</div>\n        <div className=\"buttons\">\n          <button className=\"button\" onClick={() => handleButtonClick('1')}>1</button>\n          <button className=\"button\" onClick={() => handleButtonClick('2')}>2</button>\n          <button className=\"button\" onClick={() => handleButtonClick('3')}>3</button>\n          <button className=\"button\" onClick={handleClear}>C</button>\n          <button className=\"button\" onClick={() => handleButtonClick('4')}>4</button>\n          <button className=\"button\" onClick={() => handleButtonClick('5')}>5</button>\n          <button className=\"button\" onClick={() => handleButtonClick('6')}>6</button>\n          <button className=\"button\" onClick={() => handleButtonClick('+')}>+</button>\n          <button className=\"button\" onClick={() => handleButtonClick('7')}>7</button>\n          <button className=\"button\" onClick={() => handleButtonClick('8')}>8</button>\n          <button className=\"button\" onClick={() => handleButtonClick('9')}>9</button>\n          <button className=\"button\" onClick={() => handleButtonClick('-')}>-</button>\n          <button className=\"button\" onClick={() => handleButtonClick('0')}>0</button>\n          <button className=\"button\" onClick={handleCalculate}>=</button>\n          <button className=\"button\" onClick={() => handleButtonClick('*')}>*</button>\n          <button className=\"button\" onClick={() => handleButtonClick('/')}>/</button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}